@model NZTechEvents.Web.Models.EventDetailViewModel
@{
    ViewData["Title"] = "Event Details - " + Model.Title;
    Layout = "_Layout"; // or "../Shared/_Layout" if needed
}

<div class="container mt-4">

    <div class="row">
        <!-- Left column: image & register link -->
        <div class="col-md-4">
            @if (!string.IsNullOrEmpty(Model.ImageUrl))
            {
                <img src="@Model.ImageUrl" alt="Event Image" style="max-width:100%; height:auto;" />
            }
            else
            {
                <p>[No image provided]</p>
            }

            <hr />

            @if (!string.IsNullOrEmpty(Model.RegistrationLink))
            {
                <a class="btn btn-primary" href="@Model.RegistrationLink" target="_blank">
                    Register for Event
                </a>
            }
        </div>

        <!-- Right column: title, date, location, fee, description -->
        <div class="col-md-8">
            <h3>@Model.Title</h3>
            <p>
                <strong>Date:</strong> @Model.Date.ToString("dd MMM yyyy") <br />
                <strong>Location:</strong> @Model.Location <br />
                <strong>Fee:</strong> @(Model.IsFree ? "Free" : "Paid")
            </p>

            <div>
                <strong>Description:</strong>
                <p>@Model.Description</p>
            </div>
        </div>
    </div>

    <hr />

    <!-- COMMENTS SECTION -->
    <h4>Comments</h4>

    <!-- Display existing comments -->
    @if (Model.Comments.Any())
    {
        @foreach (var comment in Model.Comments.OrderByDescending(c => c.CommentDate))
        {
            <div class="border p-2 mb-2">
                <strong>@comment.UserName</strong> 
                <span class="text-muted">(@comment.CommentDate.ToString("g"))</span>
                <p>@comment.Content</p>

                <!-- Example: update or delete forms 
                     (assuming your controller actions are named AddComment, UpdateComment, DeleteComment, etc.) -->

                <form asp-action="UpdateComment" asp-controller="Events" method="post" class="d-inline">
                    <input type="hidden" name="eventId" value="@Model.EventId" />
                    <input type="hidden" name="commentId" value="@comment.id" />
                    <input type="text" name="newContent" class="form-control form-control-sm d-inline-block w-auto" 
                           value="@comment.Content" />
                    <button type="submit" class="btn btn-sm btn-warning">Update</button>
                </form>

                <form asp-action="DeleteComment" asp-controller="Events" method="post" class="d-inline ms-2">
                    <input type="hidden" name="eventId" value="@Model.EventId" />
                    <input type="hidden" name="commentId" value="@comment.id" />
                    <button type="submit" class="btn btn-sm btn-danger">Delete</button>
                </form>
            </div>
        }
    }
    else
    {
        <p>No comments yet.</p>
    }

    <!-- Add a new comment -->
    <div class="mt-3">
        <form asp-action="AddComment" asp-controller="Events" method="post">
            <input type="hidden" name="eventId" value="@Model.EventId" />
            
            <!-- In a real app, you'd get userName from the signed-in user. For demo, prompt: -->
            <div class="mb-2">
                <label>User Name:</label>
                <input type="text" name="userName" class="form-control" required />
            </div>

            <div class="mb-2">
                <label>Comment:</label>
                <textarea name="content" class="form-control" required></textarea>
            </div>

            <button type="submit" class="btn btn-primary">Add Comment</button>
        </form>
    </div>
</div>
